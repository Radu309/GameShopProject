@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav d-flex align-items-center">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User); 
        
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Chats" asp-action="ChatInit" >
                Chat
            </a>
        </li>
        <li class="nav-item">
            <a asp-controller="Carts" asp-action="ViewCart" asp-route-id="@user?.Id">
                <img src="~/icons/shopping-cart.svg" alt="Cart" class="cart-icon"/>
            </a>
        </li>
        <li class="nav-item">
            <a asp-controller="Orders" asp-action="UserOrders">
                <img src="~/icons/clipboard.svg" alt="Cart" class="cart-icon"/>
            </a>
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @user?.FirstName !
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Games", new { area = "" })">
                <button class="btn logout-btn" id="logout" >Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Register" >
                <button class="btn register-btn" id="register" asp-area="Identity" asp-page="/Account/Register">Register</button>
            </form>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Login">
                <button class="btn login-btn" id="login" asp-area="Identity" asp-page="/Account/Login">Login</button>
            </form>
        </li>
        
    }
</ul>